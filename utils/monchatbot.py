import random
from sentence_transformers import util

from utils.wikipedia_search import get_wikipedia_summary
from utils.google_search import recherche_google
from app.config import WIKI_TRIGGER, TAILLE_MAX



def ton_humain_reponse(texte: str) -> str:
    r√©actions = [
        "üòä", "üëç", "√áa me fait plaisir de t'aider !", "Super question !",
        "Tu es brillant(e) !", "Hmm...", "Int√©ressant...", "Voyons voir...",
        "C'est une bonne question.", "Je r√©fl√©chis...", "Je ne suis pas une boule de cristal, mais je crois que c'est √ßa ! üòÇ",
        "Si j'avais un euro √† chaque fois qu'on me pose cette question... üí∏",
        "Je suis un bot, mais je commence √† comprendre les humains ! ü§ñ",
        "Je suis pas parfait, mais j'essaie ! üòÖ"
    ]
    return f"{random.choice(r√©actions)} {texte}"

def detect_salutation(message: str) -> str | None:
    msg = message.lower().strip()
    # (m√™mes blocs if qu'avant, inchang√©s)
    if any(m in msg for m in ("bonjour", "salut", "coucou", "hello", "hey")):
        return random.choice([
            "Bonjour ! Comment puis-je t'aider aujourd'hui ?",
            "Salut ! Ravi de te voir.",
            "Coucou ! Que puis-je faire pour toi ?"
        ])
    # ‚Ä¶ (les autres r√©ponses pr√©programm√©es ici identiques √† ta version)
    return None

def obtenir_la_response(message: str) -> str:
    from app.memory import memoire_cache, lock
    msg = message.strip()
    if not msg:
        return "Je n'ai pas bien saisi ta question, pourrais-tu reformuler s'il te pla√Æt ?"

    if (resp := detect_salutation(msg)):
        return resp

    if msg.lower().startswith(WIKI_TRIGGER):
        query = msg[len(WIKI_TRIGGER):].strip()
        if not query:
            return "Tu dois me dire ce que tu veux que je cherche sur Wikip√©dia."
        try:
            if (res := get_wikipedia_summary(query)):
                return ton_humain_reponse(f"Voici ce que j'ai trouv√© sur Wikip√©dia :\n{res}")
            return ton_humain_reponse("D√©sol√©, rien trouv√© de pertinent sur Wikip√©dia.")
        except Exception as e:
            return ton_humain_reponse(f"Erreur lors de la recherche Wikip√©dia : {e}")
