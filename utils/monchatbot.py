import random
from utils.wikipedia_search import get_wikipedia_summary
from app.config import WIKI_TRIGGER, GOOGLE_TRIGGER
from utils.google_search import recherche_google

def ton_humain_reponse(texte: str) -> str:
    r√©actions = [
        "üòä", "üëç", "√áa me fait plaisir de t'aider !", "Super question !",
        "Tu es brillant(e) !", "Hmm...", "Int√©ressant...", "Voyons voir...",
        "C'est une bonne question.", "Je r√©fl√©chis...", "Je ne suis pas une boule de cristal, mais je crois que c'est √ßa ! üòÇ",
        "Si j'avais un euro √† chaque fois qu'on me pose cette question... üí∏",
        "Je suis un bot, mais je commence √† comprendre les humains ! ü§ñ",
        "Je suis pas parfait, mais j'essaie ! üòÖ"
    ]
    return f"{random.choice(r√©actions)} {texte}"

def detect_salutation(message: str) -> str | None:
    msg = message.lower().strip()
    # (m√™mes blocs if qu'avant, inchang√©s)

    if any(m in msg for m in ("bonjour", "salut", "coucou", "hello", "hey")):
        return random.choice([
            "Bonjour ! Comment puis-je t'aider aujourd'hui ?",
            "Salut ! Ravi de te voir.",
            "Coucou ! Que puis-je faire pour toi ?"
        ])
    
    if any(m in msg for m in ("√ßa va", "comment √ßa va", "comment vas-tu", "√ßa roule, cv ?")):
        return random.choice([
            "√áa va bien, merci ! Et toi ?",
            "Je vais bien, merci ! Et toi, comment √ßa se passe ?",
            "Tout roule de mon c√¥t√©, et toi ?"
        ])
    
    if any(m in msg for m in ("au revoir", "bye", "√† bient√¥t", "adieu")):
        return random.choice([
            "Au revoir ! √Ä la prochaine !",
            "Bye ! Prends soin de toi.",
            "√Ä bient√¥t ! N'h√©site pas √† revenir."
        ])
    
    if any(m in msg for m in ("merci", "merci beaucoup", "merci bien")):
        return random.choice([
            "Avec plaisir ! Si tu as d'autres questions, n'h√©site pas.",
            "De rien ! Je suis l√† pour √ßa.",
            "Pas de souci, c'est toujours un plaisir de t'aider !"
        ])
    
    if any(m in msg for m in ("oui", "ouais", "d'accord", "ok")):
        return random.choice([
            "Super !",
            "D'accord, parfait !",
            "Ok, on continue alors !"
        ])
    
    if any(m in msg for m in ("non", "pas d'accord", "je ne pense pas")):
        return random.choice([
            "D'accord, je comprends. Si tu veux en discuter, je suis l√†.",
            "Pas de souci, chacun a son avis !",
            "Ok, pas de probl√®me. Dis-moi si tu changes d'avis."
        ])
    if any(m in msg for m in ("peux-tu", "pourrais-tu", "est-ce que tu peux")):
        return random.choice([
            "Bien s√ªr, je suis l√† pour √ßa ! Que veux-tu que je fasse ?",
            "Oui, dis-moi ce que tu aimerais que je fasse.",
            "Je peux certainement t'aider avec √ßa. Que souhaites-tu ?"
        ])
    if any(m in msg for m in ("qui es-tu", "qui est tu", "qui es tu")):
        return random.choice([
            "Je suis ton assistant virtuel, pr√™t √† t'aider !",
            "Je suis un chatbot con√ßu pour r√©pondre √† tes questions."
            "Je suis l√† pour t'assister, que puis-je faire pour toi ?"
        ])
    # ‚Ä¶ (les autres r√©ponses pr√©programm√©es ici identiques √† ta version)
    return None

def obtenir_la_response(message: str) -> str:
    from app.memory import memoire_cache, lock
    msg = message.strip()
    if not msg:
        return "Je n'ai pas bien saisi ta question, pourrais-tu reformuler s'il te pla√Æt ?"

    if (resp := detect_salutation(msg)):
        return resp

    # üìö Bloc Wikip√©dia
    if msg.lower().startswith(WIKI_TRIGGER):
        query = msg[len(WIKI_TRIGGER):].strip()
        if not query:
            return "Tu dois me dire ce que tu veux que je cherche sur Wikip√©dia."
        try:
            if (res := get_wikipedia_summary(query)):
                return ton_humain_reponse(f"Voici ce que j'ai trouv√© sur Wikip√©dia :\n{res}")
            return ton_humain_reponse("D√©sol√©, rien trouv√© de pertinent sur Wikip√©dia.")
        except Exception as e:
            return ton_humain_reponse(f"Erreur lors de la recherche Wikip√©dia : {e}")

    # üåê Bloc Google (structure identique √† Wikip√©dia)
    if msg.lower().startswith(GOOGLE_TRIGGER):
        query = msg[len(GOOGLE_TRIGGER):].strip()
        if not query:
            return "Tu dois me dire ce que tu veux que je cherche sur Google."
        try:
            if (res := recherche_google(query)):
                return ton_humain_reponse(f"Voici ce que j'ai trouv√© via Google :\n{res}")
            return ton_humain_reponse("D√©sol√©, rien trouv√© de pertinent via Google.")
        except Exception as e:
            return ton_humain_reponse(f"Erreur lors de la recherche Google : {e}")
        
        
